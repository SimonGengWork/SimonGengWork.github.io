<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[中国医科大学附属盛京医院(基底动脉闭塞手术)]]></title>
    <url>%2F2018%2F02%2F05%2FSurgery%2F</url>
    <content type="text"><![CDATA[摘要 医院陪护日志 2018年1月28日发病送入中国医科大学附属盛京医院(抚顺)住院部 2018年2月01日病情恶化，由中国医科大学附属盛京医院(抚顺) 转至 沈阳医科大学附属第一医院13：30 抵达 沈阳医科大学附属第一医院 急诊门诊16：30 再次转院 沈阳医科大学附属第一医院急诊门诊 转至 中国医科大学附属盛京医院(沈阳)16：55 抵达中国医科大学附属盛京医院(沈阳)急诊门诊 2018年2月2日16：00 由 急诊门诊 转入NICU(Nerve Intensive Care Unit)神经科深切治疗病房 2018年2月3日16：00 手术开始17：20 手术结束17：50 患者清醒18：10 由 手术室 转入 NICU病房 术后分析主治医师(李志清教授)分析视频 手机端，需要把此网站网址复制到浏览器才可以观看，微信不能直接观看。长按视频区2秒 为 播放/停止 电脑端可以点击视频区右下角最大化观看 后续Waiting……]]></content>
      <tags>
        <tag>手术</tag>
        <tag>护理</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Shadowsocks 与 TCP-bbr & 锐速 by Bandwagon]]></title>
    <url>%2F2017%2F10%2F24%2FShadowsocks_%E4%B8%8E_TCP-bbr_%26_%E9%94%90%E9%80%9F_by_Bandwagon%2F</url>
    <content type="text"><![CDATA[摘要 本篇文章主要记录了我利用搬瓦工(请扶墙访问)的VPS搭建Shadowsocks后，如何利用Google-TCP-bbr或锐速两种工具实现Shadowsocks扶墙速度突破天际的方法 须知首先要知道的是，搬瓦工的VPS常用架构有两种(购买VPS服务器时可以选择)：KVM (Kernel-based Virtual Machine) 建议选择KVM架构OpenVZ两者都可以安装BBR，但是OpenVZ不可以安装锐速 测速环境：联通Download:50M Upload：4MU2B 4K无压力，玩个吃鸡游戏也蛮不错 Shadowsocks(ShadowsocksR) + bbr篇搬瓦工实现Sahdowsocks + bbr有很多种方法，下面介绍两种 : 1. 图形界面版 使用购买后的IP及密码登陆Kiwivm面板 给你的VPS做个系统点击Main controls(主控台)界面，时不时刷新下，如果系统做好了会出现如下界面(推荐CentOS-6-x86_64)然后可以选择Shadowsocks Server(简称SS)也可以选择ShadowsocksR Server(简称SSR 推荐这个)；SSR对比SS可以混淆协议，两者安装方法基本一致安装时间10几秒，成功后会出现Completing字样,然后点击Go back返回到ShadowsocksR Server中(截图搞丢了)，安装好的界面是这样的(我的是SS的界面) 上面设置的是Shadowsocks服务端 Shadowsocks客户端教程传送门(含Windows、MacOS、Linux) 2. 命令行版 安装CentOS-6-x86_64系统(方法如上)然后用Bash工具(MacOS：Iterm2 Windows:Xshell或Git Bash等)使用SSH命令远程连接ssh 用户名@IP -p 端口输入密码(建议用root账户)查看系统内核uname -r如果没有wget工具可以先安装yum -y install wget将内核升级到4.9.0执行下面一行命令：wget -O- https://zhujiwiki.com/usr/uploads/2016/12/install_bbr_centos.sh | bash完成后执行重启VPS：reboot然后重连SSHssh 用户名@IP -p 端口输入密码重新登陆执行查看内核：uname -r内核已经升级成4.9.0版本,接着执行：sysctl -a|grep congestion_control如果输出选项中有net.ipv4.tcp_congestion_control = bbr表示安装成功，其他选项可忽略。如果输出结果net.ipv4.tcp_congestion_control = 结果不是bbr 则需要手动开启bbr模式(以下命令需一行行执行)：执行前注意去掉 “ 号前的 \ 符号1234echo \&quot;net.core.default_qdisc=fq\&quot; &gt;&gt; /etc/sysctl.confecho \&quot;net.ipv4.tcp_congestion_control=bbr\&quot; &gt;&gt; /etc/sysctl.confsysctl -psysctl net.ipv4.tcp_available_congestion_control 执行完成后再次执行1sysctl -a|grep congestion_control 就会看到bbr模式已经开启。 最后回到界面安装SS服务端或SSR服务端即可 Shadowsocks(ShadowsocksR) + 锐速篇 前言环境:CentOS 6支持安装锐速的内核：2.6.32-504.3.3.el6.x86_64CentOS 7支持安装锐速的内核：3.10.0-327.el7.x86_64 安装CentOS-6-x86_64系统(方法如上) 首先使用下面命令下载及更换内核，123uname -r #查看当前内核版本 rpm -ivh http://xz.wn789.com/CentOSkernel/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm rpm -ivh http://xz.wn789.com/CentOSkernel/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force 执行命令“rpm -qa | grep kernel”，查看内核是否安装成功。如果显示你安装的内核版本，表示安装成功。rpm -qa | grep kernel 重启VPS，查看内核是否修改成功。12reboot #重启VPSuname -r #当前使用内核版本 安装CentOS-7-x86_64系统(方法如上) 首先使用下面命令下载及更换内核，12rpm -ivh http://xz.wn789.com/CentOSkernel/kernel-3.10.0-229.1.2.el7.x86_64.rpm --forcerpm -qa | grep kernel #查看内核是否安装成功 重启VPS，查看内核是否修改成功。12reboot #重启VPSuname -r #当前使用内核版本 3.目前Centos 7小问题比较多，锐速针对centos 7的版版本较少。推荐在CentOS 6.中安装。 锐速破解版安装 一键安装1wget --no-check-certificate -qO /tmp/appex.sh &quot;https://raw.githubusercontent.com/0oVicero0/serverSpeeder_Install/master/appex.sh&quot; &amp;&amp; bash /tmp/appex.sh &apos;install&apos; 安装过程很简单，如果你的VPS内核支持安装，根本无需你手动操作，直接一键完成。 如果你VPS内核没有找到匹配的锐速版本，会自动提示选择接近版本。 锐速serverspeeder常用命令：123456789service serverSpeeder start #启动service serverSpeeder stop #停止service serverSpeeder reload #重新加载配置service serverSpeeder restart #重启service serverSpeeder status #状态service serverSpeeder stats #统计service serverSpeeder renewLic #更新许可文件service serverSpeeder update #更新chattr -i /serverspeeder/etc/apx* &amp;&amp; /serverspeeder/bin/serverSpeeder.sh uninstall -f #卸载 最后安装Shadowsocks server或ShadowsocksR server，尽情的扶墙吧]]></content>
      <categories>
        <category>科学上网</category>
      </categories>
      <tags>
        <tag>Shadowsocks</tag>
        <tag>科学上网</tag>
        <tag>翻墙</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[HTML&HTML5基础]]></title>
    <url>%2F2017%2F09%2F04%2FHTML-HTML5-%E5%B8%B8%E7%94%A8%E6%A0%87%E7%AD%BE-%E5%92%8C-%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%2F</url>
    <content type="text"><![CDATA[摘要 本篇文章记录了一些简单的HTML+HTML5 常用标签 HTML+HTML5 常用标签a标签123456789101112131415161718&lt;a href=&quot;#&quot;&gt;文字&lt;/a&gt; // 超链接&lt;style&gt; // 伪类 给元素添加特效的效果 a:link &#123; // :link 未访问过的链接初始的颜色 color: black; // :active 鼠标按下时链接的颜色 &#125; // :hover 鼠标移入(悬停) // :visited 访问过后的链接颜色 a:hover &#123; color: red; &#125; a:active &#123; color: plum; &#125; a:visited &#123; color: pink; &#125;&lt;/style&gt; span标签1&lt;span&gt;&lt;/span&gt; // 内联元素 常用语区分文字样式 header标签1&lt;header&gt;&lt;/header&gt; // 页眉 主要用于页面头部的信息,也可以用于板块头部 nav标签1&lt;nav&gt;&lt;a href=&quot;#&quot;&gt;链接&lt;/a&gt;&lt;a href=&quot;#&quot;&gt;链接&lt;/a&gt;&lt;/nav&gt; // 导航 包含链接的一个列表 footer标签1&lt;footer&gt;&lt;/footer&gt; // 页脚 页面的底部 或者 板块底部 section标签12&lt;section&gt;&lt;/section&gt; // 页面上的版块 // 用于划分页面上的不同区域,或者划分文章里不同的章节 article标签12&lt;article&gt;&lt;/article&gt; // 用来在页面中表示一套结构完整且独立的内容部分 // W3C 释义为 定义文章 aside标签1&lt;aside&gt;&lt;/aside&gt; // 元素标签可以包含与当前页面或主要内容相关的引用、侧边栏、广告、nav元素组，以及其他类似的有别于主要内容的部分 time标签12&lt;time&gt;&lt;/time&gt; // 用来表示时间或日期&lt;time&gt;16:57:08&lt;/time&gt; 常用标签之预设属性1234567891011121314 标签 场景 预设属性h1-h6 // 标题 &lt;strong&gt;、margin&lt;p&gt;&lt;/p&gt; // 段落 块状元素&lt;strong&gt;&lt;/strong&gt; // 强调 粗体&lt;em&gt;&lt;/em&gt; // 强调 斜体&lt;span&gt;&lt;/span&gt; // 区分样式&lt;ul&gt;&lt;/ul&gt; // 无序列表 margin-left&lt;ol&gt;&lt;/ol&gt; // 有序列表 margin-left&lt;li&gt;&lt;/li&gt; // 列表项 padding、list-style&lt;dl&gt;&lt;/dl&gt; // 定义列表 margin&lt;dt&gt;&lt;/dt&gt; // 定义列表标题&lt;dd&gt;&lt;/dd&gt; // 定义列表项 margin&lt;mark&gt;&lt;/mark&gt; // 标记&lt;img src=&quot;&quot; &gt; // 图片 border、vertical-alingn、text-decoration、src(绝对路径/相对路径);支持宽高 更多标签请前往w3school/tags页面]]></content>
      <categories>
        <category>Front-end Web(前端)</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>HTML</tag>
        <tag>HTML5</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CSS+CSS3 常用样式+复合样式 和 一些注意事项]]></title>
    <url>%2F2017%2F09%2F02%2FCSS-CSS3-%E5%B8%B8%E7%94%A8%E6%A0%B7%E5%BC%8F-%E5%A4%8D%E5%90%88%E6%A0%B7%E5%BC%8F-%E5%92%8C-%E4%B8%80%E4%BA%9B%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%2F</url>
    <content type="text"><![CDATA[摘要 本篇文章记录了一些简单的CSS+CSS3 常用样式+复合样式 CSS+CSS3 常用样式+复合样式background123456789101112131415161718background-color: #000; // 背景颜色 // 颜色英文关键字、rgb、十六进制background-image: url(img/1.jpg); // 背景图 背景图默认铺满整个容器大小background-repeat: no-repeat; // 背景图是否重复,no-repeat 不重复 // repeat-x x轴重复 // repeat-y y轴重复repeat // x/y都重复background-position: x y; // 背景图位置 // 具体数值 // left right center // top bottom center // 当第二个属性值没有填写，默认居中background-attachmen: scroll; // 背景图是否滚动 // fixed 固定在浏览器可视区 // scroll 跟随滚动条滚动background: red url(img/1.jpg) no-repeat center top scroll; // background 复合样式，不分属性书写顺序的 // 内容是会撑开容器宽高，背景不会占用容器宽高 border123456789101112131415161718192021222324252627border: 1px solid red; // 边框组成 // 1、边框的粗细 // 2、边框的样式 // 3、边框的颜色border-right: 5px dashed black; // 边框的方向 // top right bottom left // border-top // border-right // border-bottom // border-left // border-top // border-top-width // border-top-style // border-top-color // border-right // border-right-width // border-right-style // border-right-color // border-bottom // border-bottom-width // border-bottom-style // border-bottom-color // border-left // border-left-width // border-left-style // border-left-color // 边框的形状：非矩形（梯形或三角形） padding123456789101112131415161718padding: 100px; // 内填充 // 注意：设置padding后会撑大容器的大小 // padding的四个方向 // top right bottom left // paading复合写法 : top right bottom left // 只有一个属性值时: 4个方向都是同一个值 // 设置两个属性值时： // 第一个属性值设置的是上下两个方向， // 第二个属性值设置的是左右两个方向。 // 设置三个属性值时： // 第一个属性值设置的是上边一个方向， // 第二个属性值设置的是左右两个方向， // 第三个属性值设置的是下边一个方向。 // 设置四个属性值时： // 第一个属性值设置的是上边一个方向， // 第二个属性值设置的是右一个方向， // 第三个属性值设置的是下边一个方向， // 第四个属性值设置的是左边一个方向。 margin1234567891011121314151617181920212223242526272829margin: 100px; // margin 外边距 // 标签与标签之间的间隔（距离） // margin复合写法 : top right bottom left // 只有一个属性值时: 4个方向都是同一个值 // 设置两个属性值时： // 第一个属性值设置的是上下两个方向 // 第二个属性值设置的是左右两个方向 // 设置三个属性值时： // 第一个属性值设置的是上边一个方向， // 第二个属性值设置的是左右两个方向， // 第三个属性值设置的是下边一个方向。 // 设置四个属性值时： // 第一个属性值设置的是上边一个方向， // 第二个属性值设置的是右一个方向， // 第三个属性值设置的是下边一个方向， // 第四个属性值设置的是左边一个方向。 // margin的问题 // 1、margin-top传递 // 解决方法： // 为父级添加一个border； // 位父级添加一个新的属overflow:hidden; // 不适用margin，在父级中使用padding-top // 注意：**子债父偿**现象只会发生在对第一个子级使用margin-top时发生 // 2、margin上下叠压 // 解决技巧： // 在父级元素中添加 // display: warp; // flew-warp: warp; // flex弹性魔盒可以完美解决问题 盒子模型123border + padding + width/height // 盒模型大小border-left-width + padding-left + width + padding-right + border-right-width // 盒模型的宽度border-top-width + padding-top + height + padding-bottom + border-bottom-width // 盒模型的高度 font123456789101112131415161718font-weight: normal; // font-weight 文字加粗 // bold 加粗 // normal 正常font-style: normal; // font-style 文字倾斜 // italic 斜体 // normal 正常font-size: 48px; // 文字大小font-family: &quot;楷体&quot;;line-height: 30px; // 当行高的值与容器高度一致时，文字会垂直居中显示 // 多行文字测量行高的方法： // 1、确认文字大小 // 2、确认两行文字之间的空隙大小 // 3、空隙大小除以2，得出来的值就是每行文字的上下的空隙大小 // 3.1 当行高为奇数时，那么文字的上方要比下方少一个像素 // 3.2 当行高为偶数是，那么文字上下空隙值一致 // 4、通过辅助项测量多行文字的行高font：font-style | font-weight | font-size/line-height | font-family； // !!!font复合样式需要注意书写顺序 color1color: red; // 文字颜色 text-align1234text-align: left; // 文本对齐（显示）方式 // left 默认值 // right // center text-decoration123text-decoration: none; // 文本修饰 // underline 下划线 // none letter-spacing1letter-spacing: 10px // 字母间距 word-spacing1word-spacing: 20px; // 单词间距（以空格为解析单位） white-space123white-space: normal; // white-space 强制不换行 // nowrap 不换行 // normal 正常 字体与空格123456border: 1px solid red;font-size: 12px;font-family: &quot;宋体&quot;; // 字体格式不一样时，空格大小也不一样。 // 空格的大小：字体格式为宋体时，那么空格大小是当前文字大小的一半。text-indent: 2em; // em 是根据字体大小来进行计算的 // 1em = 当前字体大小 标签初始化123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102CSS reset 原则：但凡是浏览器默认的样式，都不要使用 因为每个浏览器下标签的默认样式可能会出现不一致的情况 人为的将所有样式全部统一(清除)，再根据实际情况（设计稿）进行设置 哪些样式是需要重置的？ 与盒模型相关的样式 border margin padding 标签特有的样式(含有预设属性的标签) ul&gt;li ol&gt;li dl&gt;dt dl&gt;dd 书写原则(性能最大化): 用到什么标签就清除所用标签的默认样式 建议不要直接将所有标签全部加上 不要将所有标签全部统一设置一致的reset，需根据标签默认样式特征来分类设置此样式表基于对当前UA实践的广泛研究，描述了所有HTML4元素的典型格式。鼓励开发人员在其实现中将其用作默认样式表。以下样式表供大家去查看：html, address,blockquote,body, dd, div,dl, dt, fieldset, form,frame, frameset,h1, h2, h3, h4,h5, h6, noframes,ol, p, ul, center,dir, hr, menu, pre &#123; display: block; unicode-bidi: embed &#125;li &#123; display: list-item &#125;head &#123; display: none &#125;table &#123; display: table &#125;tr &#123; display: table-row &#125;thead &#123; display: table-header-group &#125;tbody &#123; display: table-row-group &#125;tfoot &#123; display: table-footer-group &#125;col &#123; display: table-column &#125;colgroup &#123; display: table-column-group &#125;td, th &#123; display: table-cell &#125;caption &#123; display: table-caption &#125;th &#123; font-weight: bolder; text-align: center &#125;caption &#123; text-align: center &#125;body &#123; margin: 8px &#125;h1 &#123; font-size: 2em; margin: .67em 0 &#125;h2 &#123; font-size: 1.5em; margin: .75em 0 &#125;h3 &#123; font-size: 1.17em; margin: .83em 0 &#125;h4, p,blockquote, ul,fieldset, form,ol, dl, dir,menu &#123; margin: 1.12em 0 &#125;h5 &#123; font-size: .83em; margin: 1.5em 0 &#125;h6 &#123; font-size: .75em; margin: 1.67em 0 &#125;h1, h2, h3, h4,h5, h6, b,strong &#123; font-weight: bolder &#125;blockquote &#123; margin-left: 40px; margin-right: 40px &#125;i, cite, em,var, address &#123; font-style: italic &#125;pre, tt, code,kbd, samp &#123; font-family: monospace &#125;pre &#123; white-space: pre &#125;button, textarea,input, select &#123; display: inline-block &#125;big &#123; font-size: 1.17em &#125;small, sub, sup &#123; font-size: .83em &#125;sub &#123; vertical-align: sub &#125;sup &#123; vertical-align: super &#125;table &#123; border-spacing: 2px; &#125;thead, tbody,tfoot &#123; vertical-align: middle &#125;td, th, tr &#123; vertical-align: inherit &#125;s, strike, del &#123; text-decoration: line-through &#125;hr &#123; border: 1px inset &#125;ol, ul, dir,menu, dd &#123; margin-left: 40px &#125;ol &#123; list-style-type: decimal &#125;ol ul, ul ol,ul ul, ol ol &#123; margin-top: 0; margin-bottom: 0 &#125;u, ins &#123; text-decoration: underline &#125;br:before &#123; content: &quot;\A&quot;; white-space: pre-line &#125;center &#123; text-align: center &#125;:link, :visited &#123; text-decoration: underline &#125;:focus &#123; outline: thin dotted invert &#125;/* Begin bidirectionality settings (do not change) */BDO[DIR=&quot;ltr&quot;] &#123; direction: ltr; unicode-bidi: bidi-override &#125;BDO[DIR=&quot;rtl&quot;] &#123; direction: rtl; unicode-bidi: bidi-override &#125;*[DIR=&quot;ltr&quot;] &#123; direction: ltr; unicode-bidi: embed &#125;*[DIR=&quot;rtl&quot;] &#123; direction: rtl; unicode-bidi: embed &#125;@media print &#123; h1 &#123; page-break-before: always &#125; h1, h2, h3, h4, h5, h6 &#123; page-break-after: avoid &#125; ul, ol, dl &#123; page-break-before: avoid &#125;&#125; 请记住：永远不存在万能解决方案。请根据具体需求，适量裁剪和修改后再使用。 最少的CSS代码，最少的渲染，最少的重置就是最好的CSS样式代码，这反应了您的CSS层次和性能的优化。CSS reset对一些不是很了熟悉CSS特性萌新有所帮助。 常用选择器 id选择器123#idName &#123; // 当前页面具有唯一性 CSS属性&#125; 类选择器123.className &#123; // 可以是多个class加在同一个元素上 CSS属性&#125; 标签选择器123标签名 &#123; // 选择当前页面上所有同类型标签 CSS属性&#125; 群组选择器、包含选择器123456789101112131415// 群组选择器：用逗号隔开，被逗号分割的元素（选择器）全部执行统一的代码片段#idName ,.className ,标签名 &#123; CSS属性&#125;// 包含选择器(子孙选择器)：找到父级元素下的子元素或者孙元素，空格 - 代表下一集(语法)#idName .classNme ,.className idName ,标签名 .className idName .classname 标签名 &#123; CSS属性&#125; 通配符12// 找到页面上符合规则的所有的元素，慎用！！！* 选择器优先级基础选择器优先级、包含选择器优先级计算123456789// 优先级 代码执行生效的书匈奴!important&gt;行间样式 &gt; id选择器 &gt; 类选择器 &gt; 标签选择器!important 10000 // 用法:.className &#123;height: 50px !important;&#125;行间样式 1000id选择器 100类/属性/伪类选择器 10标签/伪元素 1通配符选择器 0 群组选择器优先级123#idName .className 标签名 &#123; // 优先级权重计算方法：100+10+1=111 CSS属性&#125; 块元素和内嵌元素 块状元素特征1231. 默认独占一行2. 没有宽度时，默认撑满一行3. 支持所有CSS命令 内嵌(内联、行内)的特征123451. 不单独成为一行，可以和内嵌（内联、行内）标签同为一行2. 内容撑开宽度3. 不支持宽高4. 不支持上下的margin5. 代码换行被解析 display含义及特征display是将标签转换为页面中显示的类型display不会改变标签的本质 display:block 显示为块状元素，使内联元素具备块状元素属性标签的特征123block元素会独占一行，多个block元素会各自新起一行。默认情况下，block元素宽度自动填满其父元素宽度。block元素可以设置width,height属性。块级元素即使设置了宽度,仍然是独占一行。block元素可以设置margin和padding属性。 display:inline 显示为内嵌元素，使块状元素属性标签具备内敛元素的特征123456inline元素不会独占一行，多个相邻的行内元素会排列在同一行里，直到一行排列不下，才会新换一行，其宽度随元素的内容而变化。inline元素设置width,height属性无效。inline元素的margin和padding属性，水平方向的padding-left, padding-right, margin-left, margin-right都产生边距效果；但竖直方向的padding-top, padding-bottom, margin-top, margin-bottom不会产生边距效果。 display:inline-block1234简单来说就是将对象呈现为inline对象，但是对象的内容作为block对象呈现。之后的内联对象会被排列在同一行内。比如我们可以给一个link（a元素）inline-block属性值，使其既具有block的宽度高度特性又具有inline的同行特性。]]></content>
      <categories>
        <category>Front-end Web(前端)</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>CSS</tag>
        <tag>CSS3</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端作业]]></title>
    <url>%2F2017%2F08%2F31%2F%E5%89%8D%E7%AB%AF%E4%BD%9C%E4%B8%9A%2F</url>
    <content type="text"><![CDATA[摘要 本篇文章为我的作业展示区 作业来源 妙味课堂 前端初窥 代码入门篇： 作业1作业2作业3 HTML5基础 网易产品 HTML5高级 发现好店 淘宝模块]]></content>
      <categories>
        <category>Front-end Web(前端)</category>
      </categories>
      <tags>
        <tag>前端</tag>
        <tag>miaov</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[科学上网之VPS(免费)+Shadowsocks+Chrome]]></title>
    <url>%2F2017%2F08%2F31%2F%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91%E4%B9%8BShadowsocks-Chrome%2F</url>
    <content type="text"><![CDATA[摘要 本篇文章解决 Shadowsocks是什么？(Shadowsocks下文会简称SS) SS+Chrome访问”Google” 如何访问不存在的网站 ChromeChrome浏览器 下载及安装Chrome 全平台下载地址找到适合自己系统的Chrome选择下载额，好像被墙了，下面给两个网盘地址Chrome Win7 Win8 Win10密码：avrdChrome MacOs密码：6ttc ShadowsocksShadowsocks 是什么？(Shadowsocks下文会简称SS)摘自维基百科 shadowsocks是一种基于Socks5代理方式的网络数据加密传输包，并采用Apache许可证、GPL、MIT许可证等多种自由软件许可协议开放源代码。shadowsocks分为服务器端和客户端，在使用之前，需要先将服务器端部署到服务器上面，然后通过客户端连接并创建本地代理。目前包使用Python、C、C++、C#、Go语言等编程语言开发。 ↑ 不用去理解，只需要记住 SS 这个软件是免费的,作者 Clowwindy 早已在Github开源(不要相信任何收费谣言) 下载了 SS 后，并不能直接链接Google。还需要有一个外部服务器的IP端口密码加密方式这4项数据，用来配置(添加到)你的 SS 软件中。如： Shadowsocks 下载(免安装)Shadowsocks Win7 Win8 Win10下载地址找到 DownloadShadowsocks-版本号-.zip 点击下载(随便下载到哪里都可以：桌面、C盘、D盘、E盘…….)新建一个叫Shadowsocks的文件夹(名字可以随便起)，把下载好的Shadowsocks.exe放进去 Shadowsocks.exe是不用安装的，双击后即可看到其界面 Shadowsocks MacOs下载地址找到 DownloadShadowsocksX-NG-版本号-zip 点击下载然后解压文件，找到__MACOSX文件夹中的ShadowsocksX-NG.app，拉到你的Mac的Application中，最后你将会在Mac的 Launchpad中找到 Shadowsocks Linux下载地址Linux的大佬，想必可以忽视这篇文章吧 Shadowsocks 配置（Windows为例）提供一个注册就可以免费试用50M流量的服务商（注册不限次数）速飞跃点击 包年包月用户 然后注册(邮箱什么的随便写写，符合邮箱格式就可以了) 第一步：注册完毕后进入用户界面点击产品服务→购买服务→测试账号*免费使用→立即订购→结账→完成订购 第二步：然后回到产品服务→我的服务→管理产品 第三步：双击启动Shadowsocks.exe,依次把刚刚注册的免费50M的服务器配置添到Shadowsocks中。数据对照链接地址→服务器地址端口编号→服务器端口连接密码→密码加密方式→加密备注随便写，可以理解给你的服务器起个名字超时不用管代理端口为：1080最后点击确定 然后Shadowsocks会最小化变成一个小飞机的图标 右键小飞机→服务器→选择你刚刚配置好的服务器的备注名 右键小飞机→系统代理模式→选择PAC模式 右键小飞机→启用系统代理 恭喜完成 SS+Chrome 访问Google打开你的Chrome浏览器，输入网址google.com.hk试试看 访问被墙的网站 右键小飞机→系统代理模式→选择全局模式 然后再用你的Chrome浏览器刷新试试看 PAC模式PAC配置文件中的IP、网站地址通过代理服务器流量，未配置的走本地流量全局模式所有IP、网站地址均通过代理服务器流量 结语如果想长时间且稳定的使用代理服务器（VPS），那么天下没有免费的午餐，且免费的总是不长久的，这里UP推荐性价比最高的（需要开启你的小飞机才可以浏览）搬瓦工，一年不到20$（不到140元RMB）的费用，就可以享受到浏览Youtube 4K视频畅通无阻的服务。关于搬瓦工,度娘上的中文教程也是非常多，如果有需要，UP也会写一遍关于如何购买、使用搬瓦工搭建VPS+SS+Chrome科学上网]]></content>
      <categories>
        <category>科学上网</category>
      </categories>
      <tags>
        <tag>Shadowsocks</tag>
        <tag>科学上网</tag>
        <tag>翻墙</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F08%2F24%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
